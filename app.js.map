{"version":3,"sources":["dev.js"],"names":["app","ABratio","isVariantA","getRandomBasedOn","iterations","displayVariantA","displayVariantB","i","n","length","console","log","toLocaleString","getPercentage","variation","Math","random","number","toFixed","document","addEventListener","readyState"],"mappings":"cAAA,WAsCC,QAASA,KAUR,IAAK,GARCC,GAAU,GACVC,EAAa,QAAbA,KAAa,MAAMC,GADT,KAEVC,GAAc,IAAK,IAAM,IAAO,IAAQ,KAE1CC,MAAA,GACAC,MAAA,GACAC,MAAA,GAEKC,EAAIJ,EAAWK,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAGhD,IAFAH,EAAkBC,EAAkBC,EAAI,EAEjCA,EAAIH,EAAWI,IACrBN,IAAeG,IAAoBC,IACnCC,GAGDG,SAAQC,IAAR,eAA2BP,EAAWI,GAAGI,iBAAzC,UAAmEC,EAAcR,EAAgBD,EAAWI,IAA5G,KAAoHK,EAAcP,EAAgBF,EAAWI,IAA7J,MAzBF,GAAML,GAAmB,QAAnBA,GAAoBW,GAAD,MAAeC,MAAKC,SAAWF,GAGlDD,EAAgB,QAAhBA,GAAiBI,GAAD,OAAsB,IAATA,GAAcC,QAAQ,GA2BzDC,UAASC,iBAAiB,mBAAoB,WACrB,gBAAxBD,SAASE,YAAgCrB,MACvC","file":"app.js","sourcesContent":["(function() {\n\t'use strict';\n\n/* -- Tools -- */\n\n\t// function analytics(action, label='null') {\n\t// \twindow.dataLayer.push({\n\t// \t\t'event': 'Interactive',\n\t// \t\t'category': 'Interactive',\n\t// \t\t'action': action,\n\t// \t\t'label': label\n\t// \t});\n\t// \t// console.clear();\n\t// \t// console.table(window.dataLayer);\n\t// }\n\n\t// function throttle(callback, limit) {\n\t// \tvar wait = false;\n\t// \treturn function() {\n\t// \t\tif (wait) return;\n\t// \t\tcallback.call();\n\t// \t\twait = true;\n\t// \t\tsetTimeout(function(){\n\t// \t\t\twait = false;\n\t// \t\t}, limit);\n\t// \t}\n\t// }\n\n/* -- Function -- */\n\n\t// Get the version if it is A or B\n\tconst getRandomBasedOn = (variation) => Math.random() > variation;\n\n\t// Get percentage\n\tconst getPercentage = (number) => (number * 100).toFixed(2);\n\n/* -- Application -- */\n\n\tfunction app() {\n\n\t\tconst ABratio = .5;\n\t\tconst isVariantA = () => getRandomBasedOn(ABratio);\n\t\tconst iterations = [1000,10000,100000,1000000,10000000];\n\n\t\tlet displayVariantA;\n\t\tlet displayVariantB;\n\t\tlet i;\n\n\t\tfor (let n = iterations.length - 1; n >= 0; n--) {\n\t\t\tdisplayVariantA = displayVariantB = i = 0;\n\n\t\t\twhile (i < iterations[n]) {\n\t\t\t\tisVariantA() ? displayVariantA++ : displayVariantB++;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tconsole.log(`Variations: ${iterations[n].toLocaleString()}\\nA/B: ${getPercentage(displayVariantA/iterations[n])}%/${getPercentage(displayVariantB/iterations[n])}%`);\n\t\t}\n\t}\n\n\t// Start the whole thing when the DOM is complete\n\tdocument.addEventListener('readystatechange', function() {\n\t\tdocument.readyState === 'interactive' && app();\n\t}, false);\n\n// end of the interactive\n})();\n"]}